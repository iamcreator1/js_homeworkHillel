

/*

'number' + 3 + 3
Результат: 'number33'
'number' конкатенується з 3, отримуємо 'number3'.
Потім 'number3' конкатенується з іншим 3, отримуємо 'number33'.

null + 3
Результат: 3
null перетворюється на 0, тому ми маємо 0 + 3, що дорівнює 3.

5 && "qwerty"
Результат: "qwerty"
Оператор && повертає перший false значення або останнє значення, якщо всі значення true. Тут обидва значення true, тому результатом є останнє значення, "qwerty".

+'40' + +'2' + "hillel";
Результат: 42hillel
+'40' перетворюється на 40.
+'2' перетворюється на 2.
Потім 40 + 2 дорівнює 42.
Результат конкатенується з "hillel", отримуємо "42hillel".

'10' - 5 === 6;
Результат: false
'10' перетворюється на 10.
10 - 5 дорівнює 5.
5 === 6 - це неправда, тому результатом буде false.

true + false
Результат: 1
true перетворюється на 1.
false перетворюється на 0.
1 + 0 дорівнює 1.

'4px' - 3
Результат: NaN (не число)
"4px" не може бути конвертовано в число, тому результатом буде NaN.

'4' - 3
Результат: 1
'4' перетворюється на 4.
4 - 3 дорівнює 1.

'6' + 3 ** 0;
Результат: '61'
'6' конкатенується з 3 ** 0, що дорівнює 1, тому отримуємо '61'.

12 / '6'
Крок за кроком:
'6' перетворюється на 6.
12 / 6 дорівнює 2

'10' + (5 === 6);
Результат: '10false'
Вираз 5 === 6 повертає false.
Рядок '10' конкатенується з результатом, отримуючи '10false'.

null == ''
Результат: false
null перетворюється у 0.
'' також перетворюється у 0.
0 == 0 - це правда, тому результатом є true.

3 ** (9 / 3);
Результат: 27
Вираз 9 / 3 дорівнює 3.
3 ** 3 дорівнює 27.

!!'false' == !!'true'
Результат: true
Перший операнд !!'false' перетворюється у false.
Другий операнд !!'true' перетворюється у true.
Тепер ми маємо false == true, що є неправдою, тому результатом є false.

0 || '0' && 1
Результат: 1
Оператор && має вищий пріоритет ніж ||, тому спочатку відбувається операція '0' && 1, що повертає '0'.
Тепер ми маємо 0 || '0', що повертає '0'.
Остаточний результат - це 1, оскільки 0 є логічною "false", та '0' є "truthy" значенням.

(+null == false) < 1;
Результат: true
+null перетворюється у 0.
false перетворюється у 0.
Тепер ми маємо 0 == 0, що є правдою, тому результатом є true.

false && true || true
Результат: true
Оператор && має вищий пріоритет, тому спочатку відбувається операція false && true, що повертає false.
Тепер ми маємо false || true, що повертає true.
Остаточний результат - це true.

false && (false || true);
Результат: false
Вираз у дужках (false || true) повертає true.
Тепер ми маємо false && true, що повертає false.

(+null == false) < 1 ** 5;
Результат: true
+null перетворюється у 0.
false перетворюється у 0.
Тепер ми маємо 0 == 0, що є правдою.
1 ** 5 дорівнює 1.
Тепер ми маємо 0 < 1, що також є правдою.

*/